version: '3.8'
name: ecommerce-platform-microservices

networks:
  local-network:
    name: local-network
    external: true

services:
  naming-server:
    image: naming-server:0.0.1
    container_name: naming-server
    restart: unless-stopped
    ports:
      - "8761:8761"
    build:
      context: ../naming-server
      dockerfile: Dockerfile
    healthcheck:
      test: "curl --fail --silent naming-server:8761/actuator/health | grep UP || exit 1"
      interval: 5s
      timeout: 10s
      retries: 5
      start_period: 2s
    networks:
      - local-network

  api-gateway:
    image: api-gateway:0.0.1
    container_name: api-gateway
    restart: unless-stopped
    ports:
      - "8765:8765"
    build:
      context: ../api-gateway
      dockerfile: Dockerfile
    healthcheck:
      test: "curl --fail --silent api-gateway:8765/actuator/health | grep UP || exit 1"
      interval: 5s
      timeout: 10s
      retries: 5
      start_period: 2s
    depends_on:
      naming-server:
        condition: service_healthy
    networks:
      - local-network

  config-server:
    image: config-server:0.0.1
    container_name: config-server
    restart: unless-stopped
    ports:
      - "8888:8888"
    build:
      context: ../config-server
      dockerfile: Dockerfile
    volumes:
      - ./data/.ssh:/root/.ssh:ro
    healthcheck:
      test: "curl --fail --silent config-server:8888/actuator/health | grep UP || exit 1"
      interval: 5s
      timeout: 10s
      retries: 5
      start_period: 2s
    depends_on:
      api-gateway:
        condition: service_healthy
    networks:
      - local-network

  user-service:
    image: user-service:0.0.1
    container_name: user-service
    restart: unless-stopped
    ports:
      - "8000:8000"
    build:
      context: ../user-service
      dockerfile: Dockerfile
    depends_on:
      config-server:
        condition: service_healthy
    networks:
      - local-network

  product-service:
    image: product-service:0.0.1
    container_name: product-service
    restart: unless-stopped
    ports:
      - "8010:8010"
    build:
      context: ../product-service
      dockerfile: Dockerfile
    depends_on:
      config-server:
        condition: service_healthy
    networks:
      - local-network

  order-service:
    image: order-service:0.0.1
    container_name: order-service
    restart: unless-stopped
    ports:
      - "8020:8020"
    build:
      context: ../order-service
      dockerfile: Dockerfile
    depends_on:
      config-server:
        condition: service_healthy
    networks:
      - local-network

  inventory-service:
    image: inventory-service:0.0.1
    container_name: inventory-service
    restart: unless-stopped
    ports:
      - "8030:8030"
    build:
      context: ../inventory-service
      dockerfile: Dockerfile
    depends_on:
      config-server:
        condition: service_healthy
    networks:
      - local-network

  fulfillment-service:
    image: fulfillment-service:0.0.1
    container_name: fulfillment-service
    restart: unless-stopped
    ports:
      - "8040:8040"
    build:
      context: ../fulfillment-service
      dockerfile: Dockerfile
    depends_on:
      config-server:
        condition: service_healthy
    networks:
      - local-network

  notification-service:
    image: notification-service:0.0.1
    container_name: notification-service
    restart: unless-stopped
    ports:
      - "8050:8050"
    build:
      context: ../notification-service
      dockerfile: Dockerfile
    depends_on:
      config-server:
        condition: service_healthy
    networks:
      - local-network